==25446== Memcheck, a memory error detector
==25446== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25446== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==25446== Command: ./bomberman
==25446== Parent PID: 2073
==25446== 
==25446== Conditional jump or move depends on uninitialised value(s)
==25446==    at 0x4129E3: irr::core::string<char, irr::core::irrAllocator<char> >& irr::core::string<char, irr::core::irrAllocator<char> >::operator=<char>(char const*) (irrString.h:361)
==25446==    by 0x437996: irr::CIrrDeviceLinux::activateJoysticks(irr::core::array<irr::SJoystickInfo, irr::core::irrAllocator<irr::SJoystickInfo> >&) (CIrrDeviceLinux.cpp:1703)
==25446==    by 0x41375F: EventGame::EventGame() (EventGame.cpp:34)
==25446==    by 0x416217: GameManager::GameManager() (GameManager.cpp:27)
==25446==    by 0x416C9A: GameManager::SharedInstance() (GameManager.cpp:54)
==25446==    by 0x408398: main (main.cpp:26)
==25446== 
==25446== Conditional jump or move depends on uninitialised value(s)
==25446==    at 0x63214B2: vfprintf (vfprintf.c:1642)
==25446==    by 0x634453A: vsprintf (iovsprintf.c:42)
==25446==    by 0x6327D66: sprintf (sprintf.c:32)
==25446==    by 0x437A75: irr::CIrrDeviceLinux::activateJoysticks(irr::core::array<irr::SJoystickInfo, irr::core::irrAllocator<irr::SJoystickInfo> >&) (CIrrDeviceLinux.cpp:1714)
==25446==    by 0x41375F: EventGame::EventGame() (EventGame.cpp:34)
==25446==    by 0x416217: GameManager::GameManager() (GameManager.cpp:27)
==25446==    by 0x416C9A: GameManager::SharedInstance() (GameManager.cpp:54)
==25446==    by 0x408398: main (main.cpp:26)
==25446== 
==25446== Conditional jump or move depends on uninitialised value(s)
==25446==    at 0x4C2EFB8: strlen (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==25446==    by 0x63439DB: puts (ioputs.c:36)
==25446==    by 0x4423CB: irr::os::Printer::print(char const*) (os.cpp:150)
==25446==    by 0x4418A8: irr::CLogger::log(char const*, irr::ELOG_LEVEL) (CLogger.cpp:46)
==25446==    by 0x44246C: irr::os::Printer::log(char const*, irr::ELOG_LEVEL) (os.cpp:176)
==25446==    by 0x437A89: irr::CIrrDeviceLinux::activateJoysticks(irr::core::array<irr::SJoystickInfo, irr::core::irrAllocator<irr::SJoystickInfo> >&) (CIrrDeviceLinux.cpp:1715)
==25446==    by 0x41375F: EventGame::EventGame() (EventGame.cpp:34)
==25446==    by 0x416217: GameManager::GameManager() (GameManager.cpp:27)
==25446==    by 0x416C9A: GameManager::SharedInstance() (GameManager.cpp:54)
==25446==    by 0x408398: main (main.cpp:26)
==25446== 
==25446== Conditional jump or move depends on uninitialised value(s)
==25446==    at 0x634D2B7: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1289)
==25446==    by 0x6343A82: puts (ioputs.c:41)
==25446==    by 0x4423CB: irr::os::Printer::print(char const*) (os.cpp:150)
==25446==    by 0x4418A8: irr::CLogger::log(char const*, irr::ELOG_LEVEL) (CLogger.cpp:46)
==25446==    by 0x44246C: irr::os::Printer::log(char const*, irr::ELOG_LEVEL) (os.cpp:176)
==25446==    by 0x437A89: irr::CIrrDeviceLinux::activateJoysticks(irr::core::array<irr::SJoystickInfo, irr::core::irrAllocator<irr::SJoystickInfo> >&) (CIrrDeviceLinux.cpp:1715)
==25446==    by 0x41375F: EventGame::EventGame() (EventGame.cpp:34)
==25446==    by 0x416217: GameManager::GameManager() (GameManager.cpp:27)
==25446==    by 0x416C9A: GameManager::SharedInstance() (GameManager.cpp:54)
==25446==    by 0x408398: main (main.cpp:26)
==25446== 
==25446== Syscall param write(buf) points to uninitialised byte(s)
==25446==    at 0x63CA490: __write_nocancel (syscall-template.S:81)
==25446==    by 0x634CB9E: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1251)
==25446==    by 0x634E088: new_do_write (fileops.c:506)
==25446==    by 0x634E088: _IO_do_write@@GLIBC_2.2.5 (fileops.c:482)
==25446==    by 0x634E49A: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:847)
==25446==    by 0x6343B39: puts (ioputs.c:42)
==25446==    by 0x4423CB: irr::os::Printer::print(char const*) (os.cpp:150)
==25446==    by 0x4418A8: irr::CLogger::log(char const*, irr::ELOG_LEVEL) (CLogger.cpp:46)
==25446==    by 0x44246C: irr::os::Printer::log(char const*, irr::ELOG_LEVEL) (os.cpp:176)
==25446==    by 0x437A89: irr::CIrrDeviceLinux::activateJoysticks(irr::core::array<irr::SJoystickInfo, irr::core::irrAllocator<irr::SJoystickInfo> >&) (CIrrDeviceLinux.cpp:1715)
==25446==    by 0x41375F: EventGame::EventGame() (EventGame.cpp:34)
==25446==    by 0x416217: GameManager::GameManager() (GameManager.cpp:27)
==25446==    by 0x416C9A: GameManager::SharedInstance() (GameManager.cpp:54)
==25446==  Address 0x4026025 is in a rw- anonymous segment
==25446== 
==25446== Jump to the invalid address stated on the next line
==25446==    at 0x0: ???
==25446==    by 0x4105C6: BomberMap::~BomberMap() (BomberMap.cpp:40)
==25446==    by 0x410794: BomberMap::deleteMap() (BomberMap.cpp:402)
==25446==    by 0x41DC4F: UIEventReceiver::OnEvent(irr::SEvent const&) (UIEventReceiver.cpp:141)
==25446==    by 0x444428: irr::gui::CGUIEnvironment::OnEvent(irr::SEvent const&) (CGUIEnvironment.cpp:399)
==25446==    by 0x588A6A: irr::gui::CGUIButton::OnEvent(irr::SEvent const&) (CGUIButton.cpp:225)
==25446==    by 0x443FD8: irr::gui::CGUIEnvironment::setFocus(irr::gui::IGUIElement*) (CGUIEnvironment.cpp:269)
==25446==    by 0x41DB0E: RefreshButtons (UIEventReceiver.cpp:295)
==25446==    by 0x41DB0E: UIEventReceiver::OnEvent(irr::SEvent const&) (UIEventReceiver.cpp:186)
==25446==    by 0x441898: irr::CLogger::log(char const*, irr::ELOG_LEVEL) (CLogger.cpp:42)
==25446==    by 0x441934: irr::CLogger::log(char const*, char const*, irr::ELOG_LEVEL) (CLogger.cpp:59)
==25446==    by 0x44254A: irr::os::Printer::log(char const*, irr::core::string<char, irr::core::irrAllocator<char> > const&, irr::ELOG_LEVEL) (os.cpp:194)
==25446==    by 0x4948E7: irr::scene::CSceneManager::getMesh(irr::core::string<char, irr::core::irrAllocator<char> > const&) (CSceneManager.cpp:411)
==25446==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==25446== 
==25446== 
==25446== Process terminating with default action of signal 11 (SIGSEGV)
==25446==  Bad permissions for mapped region at address 0x0
==25446==    at 0x0: ???
==25446==    by 0x4105C6: BomberMap::~BomberMap() (BomberMap.cpp:40)
==25446==    by 0x410794: BomberMap::deleteMap() (BomberMap.cpp:402)
==25446==    by 0x41DC4F: UIEventReceiver::OnEvent(irr::SEvent const&) (UIEventReceiver.cpp:141)
==25446==    by 0x444428: irr::gui::CGUIEnvironment::OnEvent(irr::SEvent const&) (CGUIEnvironment.cpp:399)
==25446==    by 0x588A6A: irr::gui::CGUIButton::OnEvent(irr::SEvent const&) (CGUIButton.cpp:225)
==25446==    by 0x443FD8: irr::gui::CGUIEnvironment::setFocus(irr::gui::IGUIElement*) (CGUIEnvironment.cpp:269)
==25446==    by 0x41DB0E: RefreshButtons (UIEventReceiver.cpp:295)
==25446==    by 0x41DB0E: UIEventReceiver::OnEvent(irr::SEvent const&) (UIEventReceiver.cpp:186)
==25446==    by 0x441898: irr::CLogger::log(char const*, irr::ELOG_LEVEL) (CLogger.cpp:42)
==25446==    by 0x441934: irr::CLogger::log(char const*, char const*, irr::ELOG_LEVEL) (CLogger.cpp:59)
==25446==    by 0x44254A: irr::os::Printer::log(char const*, irr::core::string<char, irr::core::irrAllocator<char> > const&, irr::ELOG_LEVEL) (os.cpp:194)
==25446==    by 0x4948E7: irr::scene::CSceneManager::getMesh(irr::core::string<char, irr::core::irrAllocator<char> > const&) (CSceneManager.cpp:411)
==25446== 
==25446== HEAP SUMMARY:
==25446==     in use at exit: 204,217,907 bytes in 52,866 blocks
==25446==   total heap usage: 169,950 allocs, 117,084 frees, 467,244,844 bytes allocated
==25446== 
==25446== LEAK SUMMARY:
==25446==    definitely lost: 72,291,504 bytes in 68 blocks
==25446==    indirectly lost: 0 bytes in 0 blocks
==25446==      possibly lost: 26,989,948 bytes in 49,440 blocks
==25446==    still reachable: 104,936,455 bytes in 3,358 blocks
==25446==                       of which reachable via heuristic:
==25446==                         newarray           : 40,120 bytes in 7 blocks
==25446==         suppressed: 0 bytes in 0 blocks
==25446== Rerun with --leak-check=full to see details of leaked memory
==25446== 
==25446== For counts of detected and suppressed errors, rerun with: -v
==25446== Use --track-origins=yes to see where uninitialised values come from
==25446== ERROR SUMMARY: 112 errors from 6 contexts (suppressed: 0 from 0)
